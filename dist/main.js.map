{"mappings":"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","sources":["./packages/@react-aria/spinbutton/src/useSpinButton.ts"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {announce} from '@react-aria/live-announcer';\nimport {AriaButtonProps} from '@react-types/button';\nimport {HTMLAttributes, useCallback, useEffect, useRef} from 'react';\nimport {InputBase, RangeInputBase, Validation, ValueBase} from '@react-types/shared';\n\n\nexport interface SpinButtonProps extends InputBase, Validation, ValueBase<number>, RangeInputBase<number> {\n  textValue?: string,\n  onIncrement?: () => void,\n  onIncrementPage?: () => void,\n  onDecrement?: () => void,\n  onDecrementPage?: () => void,\n  onDecrementToMin?: () => void,\n  onIncrementToMax?: () => void\n}\n\nexport interface SpinbuttonAria {\n  spinButtonProps: HTMLAttributes<HTMLDivElement>,\n  incrementButtonProps: AriaButtonProps,\n  decrementButtonProps: AriaButtonProps\n}\n\nexport function useSpinButton(\n  props: SpinButtonProps\n): SpinbuttonAria {\n  const _async = useRef<number>();\n  let {\n    value,\n    textValue,\n    minValue,\n    maxValue,\n    isDisabled,\n    isReadOnly,\n    isRequired,\n    onIncrement,\n    onIncrementPage,\n    onDecrement,\n    onDecrementPage,\n    onDecrementToMin,\n    onIncrementToMax\n  } = props;\n\n  const clearAsync = () => clearTimeout(_async.current);\n\n  // eslint-disable-next-line arrow-body-style\n  useEffect(() => {\n    return () => clearAsync();\n  }, []);\n\n  let onKeyDown = (e) => {\n    if (e.ctrlKey || e.metaKey || e.shiftKey || e.altKey || isReadOnly) {\n      return;\n    }\n\n    switch (e.key) {\n      case 'PageUp':\n        if (onIncrementPage) {\n          e.preventDefault();\n          onIncrementPage();\n          break;\n        }\n      // fallthrough!\n      case 'ArrowUp':\n      case 'Up':\n        if (onIncrement) {\n          e.preventDefault();\n          onIncrement();\n        }\n        break;\n      case 'PageDown':\n        if (onDecrementPage) {\n          e.preventDefault();\n          onDecrementPage();\n          break;\n        }\n      // fallthrough\n      case 'ArrowDown':\n      case 'Down':\n        if (onDecrement) {\n          e.preventDefault();\n          onDecrement();\n        }\n        break;\n      case 'Home':\n        if (minValue != null && onDecrementToMin) {\n          e.preventDefault();\n          onDecrementToMin();\n        }\n        break;\n      case 'End':\n        if (maxValue != null && onIncrementToMax) {\n          e.preventDefault();\n          onIncrementToMax();\n        }\n        break;\n    }\n  };\n\n  let isFocused = useRef(false);\n  let onFocus = () => {\n    isFocused.current = true;\n  };\n\n  let onBlur = () => {\n    isFocused.current = false;\n  };\n\n  useEffect(() => {\n    if (isFocused.current) {\n      announce(textValue || `${value}`);\n    }\n  }, [textValue, value]);\n\n  const onIncrementPressStart = useCallback(\n    (initialStepDelay: number) => {\n      onIncrement();\n      // Start spinning after initial delay\n      _async.current = window.setTimeout(\n        () => onIncrementPressStart(60),\n        initialStepDelay\n      );\n    },\n    [onIncrement]\n  );\n\n  const onDecrementPressStart = useCallback(\n    (initialStepDelay: number) => {\n      onDecrement();\n      // Start spinning after initial delay\n      _async.current = window.setTimeout(\n        () => onDecrementPressStart(60),\n        initialStepDelay\n      );\n    },\n    [onDecrement]\n  );\n\n  return {\n    spinButtonProps: {\n      role: 'spinbutton',\n      'aria-valuenow': typeof value === 'number' ? value : null,\n      'aria-valuetext': textValue || null,\n      'aria-valuemin': minValue,\n      'aria-valuemax': maxValue,\n      'aria-disabled': isDisabled || null,\n      'aria-readonly': isReadOnly || null,\n      'aria-required': isRequired || null,\n      onKeyDown,\n      onFocus,\n      onBlur\n    },\n    incrementButtonProps: {\n      onPressStart: () => onIncrementPressStart(400),\n      onPressEnd: clearAsync\n    },\n    decrementButtonProps: {\n      onPressStart: () => onDecrementPressStart(400),\n      onPressEnd: clearAsync\n    }\n  };\n}\n"],"names":["useSpinButton","props","_async","useRef","value","textValue","minValue","maxValue","isDisabled","isReadOnly","isRequired","onIncrement","onIncrementPage","onDecrement","onDecrementPage","onDecrementToMin","onIncrementToMax","clearAsync","clearTimeout","current","useEffect","onKeyDown","e","ctrlKey","metaKey","shiftKey","altKey","key","preventDefault","isFocused","onFocus","onBlur","announce","onIncrementPressStart","useCallback","initialStepDelay","window","setTimeout","onDecrementPressStart","spinButtonProps","role","incrementButtonProps","onPressStart","onPressEnd","decrementButtonProps"],"version":3,"file":"main.js.map"}